@model RepidShare.Entities.DocumentResponseDetailModel
<link href="~/css/easy-responsive-tabs.css" rel="stylesheet" />
@if (Model != null && Model.Questions != null && Model.Questions.Count() > 0)
{
    <span id="QuestionforStep"></span>
    @*<span class="border-box" style="cursor:pointer" data-toggle="modal" data-target="#myModal"> <i class="fa fa-eye" aria-hidden="true"></i> View Document</span>*@
    <div class="left-scroll-bar" id="sss">
        <div class="m-top"></div>
        <div class="grey-l"></div>
        <div class="margin10"></div>
        <div class="center-contain relative">
            @Html.HiddenFor(model => model.ReferralUrl)
            @Html.HiddenFor(model => model.UrlPageName)
            @Html.HiddenFor(model => model.UrlTitle)

            @if (Model.Result != null)
                {
                @Html.HiddenFor(model => model.Result.IsCompleted, new { Value = Model.Result.IsCompleted, id = "hdnIsCompleted" })
                @Html.HiddenFor(model => model.Result.DocumentResultID, new { Value = Model.Result.DocumentResultID, id = "hdnDocumentResultID" })
                @Html.HiddenFor(model => model.Result.NoOfAttempt, new { Value = Model.Result.NoOfAttempt, id = "hdnNoOfAttempt" })
                @Html.HiddenFor(model => model.Result.DocumentTargetAudienceID, new { Value = Model.Result.DocumentTargetAudienceID, id = "hdnDocumentTargetAudienceID" })
                @Html.HiddenFor(model => model.Result.CompletionDate, new { Value = Model.Result.CompletionDate, id = "hdnCompletionDate" })
                @Html.HiddenFor(model => model.Result.NoOfAttempt, new { Value = Model.Result.NoOfAttempt, id = "hdnNoOfAttempt" })
                @Html.HiddenFor(model => model.objStepList[Model.CurrentPage - 1].StepID, new { Value = Model.objStepList[Model.CurrentPage - 1].StepID, id = "hdnStepId" })


            }
            @for (int i = 0; i < Model.Questions.Count; i++)
                {
                @Html.HiddenFor(model => model.Questions[i].QuestionType, new { Value = Model.Questions[i].QuestionType })
                @Html.HiddenFor(model => model.Questions[i].QuestionID, new { Value = Model.Questions[i].QuestionID })
                @Html.HiddenFor(m => Model.Questions[i].DisplayOrder, new { Value = Model.Questions[i].DisplayOrder })
                @Html.HiddenFor(m => Model.Questions[i].IsRequireResponse, new { Value = Model.Questions[i].IsRequireResponse, id = "hdnIsReq_" + Model.Questions[i].QuestionID })

                <div id="Main_@Model.Questions[i].QuestionID">
                    <div class="form-item" onclick="GetExplanation('@Model.Questions[i].QuestionID')" style="padding:0px;margin-top: 20px;">
                        <span id="Explanation_@Model.Questions[i].QuestionID" style="display: none">@Html.Raw(Model.Questions[i].Explanation != null ? Model.Questions[i].Explanation.Replace("\r\n", "") : "")</span>
                        <label for="textfield" class="m0px">@Model.Questions[i].QuestionDescription</label>
                        @*<i class="icon-qmark" title="@Html.Raw(Model.Questions[i].QuestionHint != null ? Model.Questions[i].QuestionHint.Replace("\r\n", "") : "")"
                            onmouseover="GetHint('@Model.Questions[i].QuestionID')"><span id="Hint_@Model.Questions[i].QuestionID" style="display: none">@Html.Raw(Model.Questions[i].QuestionHint != null ? Model.Questions[i].QuestionHint.Replace("\r\n", "") : "")</span></i>*@
                        <i class="icon-qmark" title="@Html.Raw(Model.Questions[i].QuestionHint != null ? Model.Questions[i].QuestionHint.Replace("\r\n", "") : "")"><span id="Hint_@Model.Questions[i].QuestionID" style="display: none">@Html.Raw(Model.Questions[i].QuestionHint != null ? Model.Questions[i].QuestionHint.Replace("\r\n", "") : "")</span></i>
                        @if (Model.Questions[i].IsRequireResponse)
                        {
                            <span class="mandatoryFeildNew" style="color: red">*</span>
                        }
                        <div response-question-content="" class="response-question-content">
                            <div class="DocumentResultWrapper clearfix">
                                @*<div class="question-conunt">Ans: </div>*@
                                <div class="response-question-title-text validation-error-outer">
                                    <div class="response-container essay " view-role="responseEssayView">
                                        @if (!String.IsNullOrEmpty(Model.Questions[i].QuestionType))
                                        {
                                            Model.Index = i;
                                            @Html.HiddenFor(m => m.Index, new { Value = i })
                                            if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.SingleLine.ToString())
                                            {
                                                @Html.Partial("_SingleLineText", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="validation-error-outer margin10">
                                                    <span id="spST_@Model.Questions[i].QuestionID" class="field-validation-error " style="display:none;color:red">@RepidShare.Entities.Resource.DocumentResponse.valAnswer</span>
                                                </div>
                                                    <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.MultiLine.ToString())
                                            {
                                                @Html.Partial("_MultiLineText", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.Number.ToString())
                                            {
                                                @Html.Partial("_NumberText", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="validation-error-outer margin10">
                                                    <span id="spnum_@Model.Questions[i].QuestionID" class="field-validation-error " style="display:none;color:red">@RepidShare.Entities.Resource.DocumentResponse.valAnswer</span>
                                                </div>
                                                    <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.SingleSelect.ToString())
                                            {
                                                @Html.Partial("_SingleSelectRadio", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="validation-error-outer margin10">
                                                    <span id="spn_@Model.Questions[i].QuestionID" class="field-validation-error " style="display:none;color:red">@RepidShare.Entities.Resource.DocumentResponse.valAnswer</span>
                                                </div>
                                                    <div class="clearfix margin10"></div>

                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.MultiSelect.ToString())
                                            {
                                                @Html.Partial("_MultiSelectCheckbox", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="validation-error-outer margin10">
                                                    <span id="spnm_@Model.Questions[i].QuestionID" class="field-validation-error " style="display:none;color:red">@RepidShare.Entities.Resource.DocumentResponse.valAnswer</span>
                                                </div>
                                                    <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.DateAndTime.ToString())
                                            {
                                                @Html.Partial("_DateTimeText", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.DropDown.ToString())
                                            {
                                                @Html.Partial("_DropDown", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.Price_Question.ToString())
                                            {
                                                @Html.Partial("_Price_Question", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="clearfix margin10"></div>
                                            }
                                            else if (Model.Questions[i].QuestionType == RepidShare.Utility.CommonUtils.QuestionType.Price.ToString())
                                            {
                                                @Html.Partial("_PriceText", Model)
                                                if (!string.IsNullOrEmpty(@Model.Questions[i].Explanation))
                                                {
                                                    <div class="question-box margin2">
                                                        <img src="~/img/question-img.png">
                                                    </div>
                                                        <div class="top-green-line"></div>
                                                        <div class="grey-box-question">
                                                            @Model.Questions[i].Explanation
                                                            @*Do not know what date to put, click on "white" and fill it later later*@
                                                        </div>
                                                }
                                                <div class="clearfix margin10"></div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>


        @Html.Partial("_ViewParameters", Model, new ViewDataDictionary<RepidShare.Entities.ViewParameters>())
        <div class="row">
            <div class="col-sm-12">
            </div>
        </div>
        <!-- Modal Folder -->
        <div id="myFoledrModal" class="modal fade" role="dialog">
            <div class="modal-dialog top-form">
                <!-- Modal content-->
                <div class="modal-content1">
                    <div class="modal-header">
                        <button type="button" class="close" id="btnFolderClose" data-dismiss="modal">&times;</button>
                        <h4 id="modal-body-title" class="modal-title">Folder List</h4>
                    </div>
                    <div class="modal-body">

                        <div id="modal-body-content" style="height:75px!important">
                            <div class="row">
                                <div class="col-md-offset-2 col-md-4 label-style">
                                    <label class="labelColon" for="StepName" style="margin-top: 7px">Select Folder</label>
                                </div>
                                <div class="col-md-5">
                                    <select class="form-control" id="dropDownFolder" style="width:116px"><option value="" disabled="disabled" selected="selected">--Select--</option></select>
                                </div>
                            </div>
                            <div class="row col-md-offset-4 col-md-2">
                                <input id="btnFolderType" class="btn btn-primary btn-md" type="submit" value="OK" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" value="@Session["hdnPageId"]" id="hdnUserId" />
    </div>
        <div class="row">
            <div class="col-sm-12 add-position">
                <div class="text-center button-group button-group-new question-button-group">
                    @if (Session["UserId"] != null)
                {
                        <input type="hidden" value="@Session["UserId"]" id="hdnUserId" />

                    }
                    @if (Model != null && Model.TotalPages > 1 && Model.CurrentPage > 1)
                {
                        <a href="javascript:void(0)" id="btnPrevious" class="btn btn-primary" style="float:left">Previous</a>
                    }
                    @if (Model != null && Model.CurrentPage == Model.TotalPages)
                {
                        <a href="javascript:void(0)" id="btnSave" class="btn btn-primary">Save</a>
                        <a href="javascript:void(0)" id="btnSaveAndFinish" class="btn btn-primary inactiveLink">Save&Finish</a>
                    }
                    else
                    {
                        <a href="javascript:void(0)" id="btnNext" class="btn btn-primary" style="float:right;">Next</a>
                    }
                    <a href="@Model.ReferralUrl" id="btnBackToList" class="btn btn-primary" style="float:left; display:none">Back</a>
                </div>
            </div>

        </div>


         <!-- Modal Confirmation -->
        <div id="myConirmationModal" class="modal fade" role="dialog">
            <div class="modal-dialog top-form" style="width:533px!important">
                <!-- Modal content-->
                <div class="modal-content1">
                    <div class="modal-header">
                        <button type="button" class="close" id="btnFolderClose" data-dismiss="modal">&times;</button>
                        <h4 id="modal-body-title" class="modal-title">Are you sure?</h4>
                    </div>
                    <div class="modal-body">

                        <div id="modal-body-content" style="height:22px!important">
                            <div class="row">
                                <p class="text-center">You are requesting to leave this page - any changes you have made will be lost!</p>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="btnConfirm" class="btn btn-primary btn-md">Ok</button>
                        <button type="button" id="btnConfirmSave" class="btn btn-primary btn-md">Save</button>
                        <button type="button" class="btn btn-primary btn-md" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
}

        @*<p>What is the date of this contract? </p>
            <div class="margin10"></div>
            <span>DD/MM/YY</span>
                        <span class="date">Date</span>
                        <div class="clearfix margin10"></div>
                        <div class="grey-box-question">
                            <i class="fa fa-question-circle" aria-hidden="true"></i>
                            Do not know what date to put, click on "white" and fill it later later
                        </div>
                        <div class="clearfix margin10"></div>*@

        <script type="text/javascript">

            function GetExplanation(id)
            {
                $("#div_explanationwrap").html($("#Explanation_"+id).html());
            }

            function GetHint(id)
            {
                $("#div_explanationwrap").html($("#Hint_"+id).html());
            }


            function QuestionShowHide(QuestionId,AnsValue)
            {
                var QuestionParents = @Html.Raw(Json.Encode(Model.Questions));

                for (var i = 0; i < QuestionParents.length; i++) {
                    var questionOpetion = QuestionParents[i];

                    if(QuestionId>0 && AnsValue !='')
                    {
                        if(questionOpetion.ParentQuestion == QuestionId)
                        {
                            if(questionOpetion.ParentAnswer == AnsValue)
                                $("#Main_"+questionOpetion.QuestionID).show();
                            else
                                $("#Main_"+questionOpetion.QuestionID).hide();
                        }

                    }
                    else
                    {
                        if ( questionOpetion.ParentQuestion == null || questionOpetion.ParentQuestion == '')
                        {
                            $("#Main_"+questionOpetion.QuestionID).show();
                        }
                        else
                        {
                            $("#Main_"+questionOpetion.QuestionID).hide();
                        }
                    }

                }

            }


            $(document).ready(function () {
                $('input[type="text"]').each(function() {
                    $('input[type="text"]').removeAttr('class');
                    $('input[type="text"]').addClass('form-control-txt');
                    $('input[type="text"]').addClass('textBox');
                    $('input[type="text"]').css('border','0');
                    $('input[type="text"]').css('width','60%');
                    $('input[type="text"]').css('border-bottom','solid 2px #1589ad');
                });
                $('textarea').each(function() {

                    $('textarea').removeAttr('class');
                    $('textarea').addClass('form-control-txt');
                    $('textarea').addClass('txtarea');
                    $('textarea').addClass('txtareaClas');

                });

                $('select').each(function() {
                    $('select').addClass('form-control-txt');
                    $('select').addClass('width202');
                    //$('select').addClass("watermark").val("Type here");    
                    //$('select').setAttribute("placeholder", "hello");
                   
                   
                });
                $('#dtTimepckr input[type=text]').each(function() {                     
                    $(this).attr("Placeholder", "MM/DD/YYYY");
                });              
               
                $('li.stepCls').not("#stepsId_1").each(function (e) {
                    var page = $("#CurrentPage").val();
                    var hdnId = $("#hdnMaxPage").val();
                    if (page > hdnId)
                    {
                        $("#hdnMaxPage").val(page);
                        hdnId = page;
                    }
                    var id = $(this).attr('id');
                    var stepId = id.replace('stepsId_', '');
                    if (hdnId < stepId) {
                        $('#' + id).addClass('disabled');
                    }
                });

                $("#btnFolderType").click(function () {
                    $("#isSaved").val(1);
                    $("#FolderId").val($("#dropDownFolder").val());
                    $("#ActionType").val("save");
                    if (CheckValid()) {
                        sendToServer();
                    } else {
                        $("#frmDocumentResponse").valid();
                    }
                });
                $("#btnFolderClose").click(function () {
                    $('#dropDownFolder').empty();
                });
                setQustionStep();

                function setQustionStep() {

                    var page = $("#CurrentPage").val();
                    $("#QuestionforStep").text($("#stepsId_" + page).text());
                }

                //$(".numericInt").numeric({decimal : false });
                //$("input.numericDec").numeric({ decimal: "." });
                //$.validator.unobtrusive.addValidation("#frmDocumentResponse");

                // Show Sucess or Error Message on popup by common function showMessagePopup
                if ($("#hdnMessage").val() != "" && $("#hdnMessageType").val() != "") {
                    showMessagePopup("divMessage", $("#hdnMessageType").val(), $("#hdnMessage").val());
                }

                QuestionShowHide(0,'');
                //$("#btnSave").click(function () {
                //    //$("#ActionType").val("save");
                //    //if (CheckValid())
                //    //{
                //    //    sendToServer();
                //    //} else
                //    //{
                //    //    $("#frmDocumentResponse").valid();
                //    //}
                //});
                $("#btnConfirmSave").click(function ()
                {
                    if(CheckValid())
                    {   
                        if( $("#frmDocumentResponse").valid())
                        {
                            var UserId = $("#hdnUserId").val();//@Session["UserId"];
                            console.log($("#hdnUserId").val());
                            getFolderList("/User/GetFolerById?prm=" + UserId);
                            setQuestionAnswerStatus();
                            $('#myConirmationModal').modal('hide');
                        }
                        else{
                            $('#myConirmationModal').modal('hide');
                        }
                    }
                });
                $("#btnSave").click(function () {

                    if(CheckValid())
                    {   
                        if( $("#frmDocumentResponse").valid())
                        {
                            var UserId = $("#hdnUserId").val();//@Session["UserId"];
                            console.log($("#hdnUserId").val());
                            getFolderList("/User/GetFolerById?prm=" + UserId);
                            setQuestionAnswerStatus();
                        }
                    }
                    //getFolderList("/User/GetFolerById?prm=" + 1)
                });

                $("#btnSaveLater").click(function () {
                    
                    if (CheckValid()) {
                        if ($("#frmDocumentResponse").valid()) {
                            var UserId = $("#hdnUserId").val();//@Session["UserId"];
                            console.log($("#hdnUserId").val());
                            getFolderList("/User/GetFolerById?prm=" + UserId);
                            setQuestionAnswerStatus();
                        }
                    }
                    //getFolderList("/User/GetFolerById?prm=" + 1)
                });

                function getFolderList(url) {

                    //beginRequest();
                    $.ajax({
                        type: "GET",
                        url: url,
                        data: '{}',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response == "") {
                                $("#btnFolderType").click();
                            } else {
                                $.each(response, function (index, val) {
                                    var optionTag = $('<option></option>').val(val).html(val);
                                    if (index == 0)
                                        optionTag = optionTag.attr("selected", "selected");
                                    $(optionTag).val(val.FolderId).text(val.FolderName);
                                    $('#dropDownFolder').append(optionTag);
                                });
                                $('#myFoledrModal').modal('toggle');
                            }
                        },
                        failure: function (response) {
                            //alert(response.responseText);
                            alert("failure");
                        },
                        error: function (response) {
                            //alert(response.responseText);
                            alert("error");
                        }
                    });
                }
                $("#btnSaveAndFinish").click(function () {
                    $("#ActionType").val("submit");
                    if (CheckValid())
                    {
                        sendToServer();
                    }
                    else
                    {
                        $("#frmDocumentResponse").valid();
                    }
                });

                $("#btnPrevious").click(function () {
                    $("#ActionType").val("previous");
                    if(CheckValid())
                    {
                        setQuestionAnswerStatus();
                        sendToServer();
                    }
                    else
                    {
                        $("#frmDocumentResponse").valid();
                    }
                });
                $("#btnNext").click(function () {
                    $("#ActionType").val("next");
                    if(CheckValid())
                    {
                        setQuestionAnswerStatus();
                        sendToServer();
                    }
                    else
                    {
                        $("#frmDocumentResponse").valid();

                    }
                });
                function setQuestionAnswerStatus()
                {
                    var isComplete= true;
                    $('#input-Box input').each(function() {
                        if (this.value == "") {                            
                            isComplete=false;
                        }
                    });
                    $('#input-number input').each(function() {                       
                        if (this.value == "") {                          
                            isComplete=false;
                        }
                    });
                    $('textarea').each(function(){                        
                        if (this.value == "") {  
                            isComplete=false;
                        }
                    });
                    $('.divRadioButton').each(function(){
                        if($('.radio span').hasClass('checked'))
                        {
                        }
                        else{                            
                            isComplete=false;
                        }
                    });
                    $('.divCheckBox').each(function(){
                        if($('.checker span').hasClass('checked'))
                        {
                        }
                        else{                            
                            isComplete=false;
                        }
                    });                 
                    $('#dtTimepckr input').each(function() {
                        if (this.value == "") {
                            isComplete=false;
                        }
                    });
                    $('#drpDown select').each(function() {
                        if (this.value == -1) {                            
                            isComplete=false;
                        }                        
                    });
                    var UserDetailModel={};
                    if(isComplete)
                    {
                        UserDetailModel.StatusId=1;
                        UserDetailModel.StatusName="Complete";
                    }
                    else{
                        UserDetailModel.StatusId=2;
                        UserDetailModel.StatusName="Partial Complete";
                    }
                    UserDetailModel.UserID = $("#hdnUserId").val();
                    UserDetailModel.DocumentID = $("#hdnDocumentID").val();
                    UserDetailModel.StepID=$("#hdnStepId").val();
                    $.ajax({
                        type: "POST",
                        url: "/DocumentResponse/InsertStepSatus",
                        data: JSON.stringify(UserDetailModel),
                        contentType: "application/json",
                        dataType: "json",
                        success: function (data) {
                            //$('#result').html(data);
                            //window.location = "User/MyDocument";
                        }
                    });
                }
                //Text area fixed no of lines

                $('.yourtextarea').keyup(function()
                {

                    var allowedNumberOfLines = 4;
                    allowedNumberOfLines = $(this).attr('rows');
                    var TotalLines =  $(this).val().split("\n").length;
                    if(TotalLines > allowedNumberOfLines)
                    {
                        modifiedText = $(this).val().split("\n").slice(0, allowedNumberOfLines);
                        $(this).val(modifiedText.join("\n"));
                    }
                });

                //regular expression for script tag
                var regex = new RegExp("^[^<>\"/;`%]*$");
                $("input[type=text], textarea").keypress(function (e) {
                    if (!regex.test(String.fromCharCode(e.which))) {
                        //$(this).val($(this).val().replace($(this).val(), ""));
                        e.preventDefault();
                    }
                });

                $(".radioanswer").click(function () {

                    var surveOptions = $(this).attr('id').replace('rdb_', '');
                    var suveyQuestionOptionID = surveOptions.split('_')[0];
                    var suveyQuestionID = surveOptions.split('_')[1];
                    var hdnSelectedAnswer = $("#hdn_" + suveyQuestionID);
                    $("#spn_" + suveyQuestionID).hide();
                    hdnSelectedAnswer.val(suveyQuestionOptionID);
                });

                $("li[id^='stepsId_']").click(function () {
                    var stepId=$(this).attr('id').replace('stepsId_','');
                    $("#ActionType").val("custom");
                    $("#CurrentPage").val(stepId);
                    $("#btnSubmit").click();
                    //window.location.href = "/DocumentResponse/SaveDocumentResponse";
                    //var data = $('form').serialize();
                    //$.ajax({
                    //            type: "POST",
                    //            url: "/DocumentResponse/SaveDocumentResponse",
                    //            data: data,
                    //            datatype: "json",
                    //            success: function (data) {

                    //            }
                });

                //$('#frmDocumentResponse').submit();


                //    var stepId=$(this).attr('id').replace('stepsId_','');
                //    var DocumentResponseDetailModel ={};
                //    DocumentResponseDetailModel.DocumentID=5;
                //    $("#CurrentPage").val(stepId);
                //    $("#ActionType").val("custom");
                //    var Result={'IsCompleted':$('#hdnIsCompleted').val(),'DocumentResultID':$('#hdnDocumentResultID').val(),'NoOfAttempt':$('#hdnNoOfAttempt').val(),'DocumentTargetAudienceID':$('#hdnDocumentTargetAudienceID').val(),'CompletionDate':$('#hdnCompletionDate').val()};
                //    //$("#ActionType").val("custom");
                //    //$("#CurrentPage").val(stepId);
                //    //var DocumentResponseDetailModel ={"Result":Result,"DocumentID":5};
                //    //var DocumentID=$('#hdnDocumentResultID').val();

                //    $.ajax({
                //        type: "POST",
                //        url: "/DocumentResponse/SaveDocumentResponse",
                //        data: '{DocumentResponseDetailModel: ' + JSON.stringify(DocumentResponseDetailModel) + '}',
                //        datatype: "json",
                //        success: function (data) {
                //            //$('#result').html(data);
                //            //window.location = "User/MyDocument";
                //        }
                //    });

            });
            function SetDefaultFolder() {

                var FolderModel = {};
                var DocumentId = $('#hdnDocumentID').val();
                $.ajax({
                    type: "POST",
                    url: "/User/FolderMove",
                    data: '{FolderModel: ' + JSON.stringify(FolderModel) + '}',
                    datatype: "html",
                    success: function (data) {
                        //$('#result').html(data);

                    }
                });
            }


            function CheckValid() {

                var isvalid= true;
                var Questions = @Html.Raw(Json.Encode(Model.Questions));

                for (var i = 0; i < Questions.length; i++) {
                    var question = Questions[i];
                    if ( question.IsRequireResponse && question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.SingleSelect.ToString()')
                    {
                        if($(".radioquestionoption_"+question.QuestionID+":checked").length<=0)
                        {
                            $("#spn_"+question.QuestionID).show();
                            isvalid=false;
                        }
                        else{
                            $("#spn_"+question.QuestionID).hide();

                        }
                    }

                    else  if ( question.IsRequireResponse && question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.MultiSelect.ToString()')
                    {
                        if($(".chkquestionansweroption_"+question.QuestionID+":checked").length<=0)
                        {
                            $("#spnm_"+question.QuestionID).show();
                            isvalid=false;
                        }
                        else{
                            $("#spnm_"+question.QuestionID).hide();

                        }
                    }

                    else  if ( question.IsRequireResponse && question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.MultiSelect.ToString()')
                    {
                        if($(".chkquestionansweroption_"+question.QuestionID+":checked").length<=0)
                        {
                            $("#spnm_"+question.QuestionID).show();
                            isvalid=false;
                        }
                        else{
                            $("#spnm_"+question.QuestionID).hide();

                        }
                    }
                    else  if ( question.IsRequireResponse && question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.Number.ToString()')
                    {
                        isvalid= CheckNumber("#num_"+question.QuestionID);

                    }
                    else if (question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.Number.ToString()' &&  $("#num_"+question.QuestionID).val().length>0)
                    {
                        isvalid= CheckNumber("#num_"+question.QuestionID);
                    }
                    else if (question.QuestionType == '@RepidShare.Utility.CommonUtils.QuestionType.Price_Question.ToString()')
                    {
                        //Questions_0__objPriceQuestionModel_DivInnerHTML
                        $("#Questions_"+i+"__objPriceQuestionModel_DivInnerHTML").val($("#PriceQuestion_"+question.QuestionID).html());
                        //var s = "Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...) Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...) Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...) Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...) Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...) Bobby Peel (12 February 1857 – 12 August 1941) was an English professional cricketer who played first-class cricket for Yorkshire between 1883 and 1897. Although an effective batsman, he was primarily a left-arm spin bowler; when conditions favoured his bowling style, he was a matchwinner. Between 1884 and 1896, Peel was regularly selected to represent England, playing 20 Test matches in which he took 101 wickets; in one such game, he bowled England to victory after they had followed on in Australia in 1894–95. Peel began playing for Yorkshire in 1883 and was the team's main spinner by 1887; he regularly took over 100 wickets in a season, despite receiving little support from other bowlers, and was among the leading batsmen for the county. As a player, he was very popular but had a reputation for drinking heavily. In 1897 he was suspended for drunkenness during a match and never played for Yorkshire again, although the events leading up to this are unclear. Later stories, generally dismissed by historians, suggested he urinated on the pitch. He continued to play and coach cricket for most of his life. Among his other jobs, he became the landlord of a public house and worked in a mill. (Full article...)"
                        //$("#Questions_"+i+"__objPriceQuestionModel_DivInnerHTML").val(s);
                        $("#Questions_"+i+"__objPriceQuestionModel_InstNoValue").val($("#TaxInst_"+question.QuestionID).val());
                        $("#Questions_"+i+"__objPriceQuestionModel_TaxTypeValue").val($("#TaxOpt_"+question.QuestionID).val());
                        $("#Questions_"+i+"__objPriceQuestionModel_PriceAmtText").val($("#DivText_"+question.QuestionID).html());
                        $("#Questions_"+i+"__objPriceQuestionModel_FixedAmt").val($("#interest_type_"+question.QuestionID).val());

                        var BackTxt = "__AnswerDetail";
                        var sum = 0;
                        // iterate through each td based on class and add the values
                        $(".amt_"+question.QuestionID).each(function() {

                            var value = $(this).text();
                            // add only if the value is number
                            if(!isNaN(value) && value.length != 0) {
                                sum += parseFloat(value);
                            }
                        });

                        if(sum > $("#Questions_@Model.Index" + BackTxt).val())
                        {
                            $("#IsRequired_"+question.QuestionID).text('Please Change installment amount');
                            isvalid = false;
                        }

                        if($("#IsSubmit_"+question.QuestionID).val()=="false" )
                        {
                            isvalid = false;
                        }


                    }

                }
                return isvalid;
            }




            //Limit to # of rows in textarea or arbitrary # of rows
            /*
            $('.yourtextarea').bind('change keyup', function (event) {
                //Option 1: Limit to # of rows in textarea
                rows = $(this).attr('rows');
                //Optiion 2: Limit to arbitrary # of rows
               // rows = 6;

                var value = '';
                var splitval = $(this).val().split("\n");

                for (var a = 0; a < rows && typeof splitval[a] != 'undefined'; a++) {
                    if (a > 0) value += "\n";
                    value += splitval[a];
                }
                $(this).val(value);
            });
            */

            // check number validation
            $('.numericDec').bind('change keyup', function (event) {

                min_length = $(this).attr('data-val-length-min');
                max_length=  $(this).attr('data-val-length-max');
                questionid=  $(this).attr('questionid');

                var numval = $(this).val();

                if (isNaN(numval) ||(  parseFloat(min_length) >parseFloat( numval )|| parseFloat(numval) >parseFloat(max_length)))
                {
                    //  $(this).val('');
                    $("#spnum_"+questionid).text(format('@RepidShare.Entities.Resource.DocumentResponse.valNumberText',min_length,max_length));
                    $("#spnum_"+questionid).show();
                }
                else{
                    $("#spnum_"+questionid).hide();
                }


            });


            // check number validation
            $('.numericInt').bind('change keyup', function (event) {

                min_length = $(this).attr('data-val-length-min');
                max_length=  $(this).attr('data-val-length-max');
                questionid=  $(this).attr('questionid');

                var numval = $(this).val();
                if ( isNaN(numval) ||(  parseFloat(min_length) >parseFloat( numval )|| parseFloat(numval) >parseFloat(max_length)))
                {
                    //  $(this).val('');
                    $("#spnum_"+questionid).text(format('@RepidShare.Entities.Resource.DocumentResponse.valNumberText',min_length,max_length));
                    $("#spnum_"+questionid).show();
                }
                else{
                    $("#spnum_"+questionid).hide();
                }


            });


            function CheckNumber(obj)
            {

                var checkValidnum= true;
                min_length = $(obj).attr('data-val-length-min');
                max_length=  $(obj).attr('data-val-length-max');
                questionid=  $(obj).attr('questionid');
                var numval = $(obj).val();
                if ( isNaN(numval) ||(  parseFloat(min_length) >parseFloat( numval )|| parseFloat(numval) >parseFloat(max_length)))
                {
                    //  $(this).val('');
                    $("#spnum_"+questionid).text(format('@RepidShare.Entities.Resource.DocumentResponse.valNumberText',min_length,max_length));
                    $("#spnum_"+questionid).show();
                    checkValidnum=false;
                }
                else{
                    $("#spnum_"+questionid).hide();
                    checkValidnum=true;
                }
                return checkValidnum;
            }




        </script>
        <style>
            .add-bottom {
                margin-bottom: 10px !important;
            }

            .modal-content1 {
                position: relative;
                background-color: #fff;
                -webkit-background-clip: padding-box;
                background-clip: padding-box;
                border: 1px solid #999;
                border: 1px solid rgba(0,0,0,.2);
                border-radius: 6px;
                outline: 0;
                -webkit-box-shadow: 0 3px 9px rgba(0,0,0,.5);
                box-shadow: 0 3px 9px rgba(0,0,0,.5);
                background-image: url('../img/login-bg.png');
            }

            .modal-content1 {
                -webkit-box-shadow: 0 5px 15px rgba(0,0,0,.5);
                box-shadow: 0 5px 15px rgba(0,0,0,.5);
            }
            /* Tooltip container */
            .tooltip {
                position: relative;
                display: inline-block;
                border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
            }

                /* Tooltip text */
                .tooltip .tooltiptext {
                    visibility: hidden;
                    width: 120px;
                    background-color: black;
                    color: #fff;
                    text-align: center;
                    padding: 5px 0;
                    border-radius: 6px;
                    /* Position the tooltip text - see examples below! */
                    position: absolute;
                    z-index: 1;
                }

                /* Show the tooltip text when you mouse over the tooltip container */
                .tooltip:hover .tooltiptext {
                    visibility: visible;
                }

            .boldSpan {
                font-weight: bold;
            }

            .quesScroll {
                background-color: #fff;
                height: 620px;
                overflow-y: auto;
                /* border: 1px solid #cccccc; */
                margin-top: 15px;
            }

            .inside-box {
                border-radius: 5px;
                /* padding: 15px; */
                padding-right: 15px;
                padding-left: 15px;
            }

            .margin2 {
                margin-top: -9px !important;
            }
        </style>
