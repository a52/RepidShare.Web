@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_websiteLayout.cshtml";
}

@model RepidShare.Entities.Register


<script src="@Url.Content("~/Scripts/chosen.jquery.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@*Changed by Narayan*@

<script type="text/javascript">

    function CheckPassword()
    {
           $(".ChangePasswordError").text('');
                var passwordCriteria = "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,}$";
                var CurrentPassword = $('#txtPassword').val();
                  if (CurrentPassword.match(passwordCriteria)) {
                    return true;
                }
                else {
                    $(".ChangePasswordError").text("Password must be 7 characters long and contain at least one upper case letter, one lower case letter, one number, and one symbol.");
                    return false;
                    //return true;
                  }

        }

</script>



<div class="container">
    <div class="row">
        <div class="container">
            @using (Ajax.BeginForm("Register", "User", null, new AjaxOptions { OnBegin = "beginRequest", OnComplete = "endRequest" }, new { @id = "frmRegister" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model=>Model.UserId)
                @Html.HiddenFor(model=>Model.RegisterId)
                <div class="row">
                    <div class="col-lg-9 center-block float-none">
                        <h1>Registration form</h1>
                        <div class="form-wrap clearfix">
                            <div class="pull-right">
                                <h3 class="heading3">Your satisfaction guaranteed</h3>
                                <ul class="unordered-listing">
                                    <li>100% refund if you're not happy</li>
                                    <li>Securing your data safely</li>
                                    <li>This site uses strong 128 Bit Encryption</li>
                                </ul>
                            </div>
                            <form action="post">
                                <div class="overflow">
                                    <h3 class="heading3">Basic details...</h3>
                                    <div class="form-group has-error">
                                        <label class="block">* Account Type:</label>
                                    </div>
                                    <div class="form-group radio-group clearfix">
                                        <span class="padR10 pull-left">
                                            @*<input type="radio" name="gender" value="male" checked="checked" class="pull-left" />
                                        <label class="pull-left">Male</label>*@
                                            Personal:   @Html.RadioButtonFor(m => m.AccountType, "Personal", new { @checked = true })
                                        </span><span class="pull-left">
                                            @*<input type="radio" name="gender" value="female" class="pull-left" />
                                        <label class="pull-left">Female</label>*@
                                            Business: @Html.RadioButtonFor(m => m.AccountType, "Business")
                                        </span>
                                    </div>
                                    <div class="form-group">
                                        @Html.ValidationMessageFor(model => model.AccountType)
                                    </div>
                                    <div class="form-group clear  has-error">
                                        <label class="block">Your title:</label>
                                        <div class="row">
                                            <div class="col-sm-6 col-xs-12">
                                                @{
                List<SelectListItem> listTitle = new List<SelectListItem>();
                listTitle.Add(new SelectListItem
                {
                    Text = "Miss",
                    Value = "Miss"
                });
                listTitle.Add(new SelectListItem
                {
                    Text = "Mr",
                    Value = "Mr"
                });
                listTitle.Add(new SelectListItem
                {
                    Text = "Ms",
                    Value = "Ms"
                });
                listTitle.Add(new SelectListItem
                {
                    Text = "Mrs",
                    Value = "Mrs"
                });
                                                }

                                                @Html.DropDownListFor(model => model.Title, listTitle, "-- Please select --", new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.Title)

                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>* First name:</label>
                                    @Html.TextBoxFor(model => model.FirstName, new { id = "txFirstName", @class = "form-control", @maxlength = "100", @value = "" })
                                    @Html.ValidationMessageFor(model => model.FirstName)
                                </div>
                                @* <div class="form-group">
                                    <label>Middle name(s):</label>
                                    @Html.TextBoxFor(model => model.MName, new { id = "txtMName", @class = "form-control", @maxlength = "100", @value = "" })
                                </div>*@
                                <div class="form-group">
                                    <label>* Last name:</label>
                                    @Html.TextBoxFor(model => model.LastName, new { id = "txtLastName", @class = "form-control", @maxlength = "128", @value = "" })
                                    @Html.ValidationMessageFor(model => model.LastName)
                                </div>
                                <div class="form-group">
                                    <label>* Your gender:</label>
                                </div>
                                <div class="form-group radio-group clearfix">
                                    <span class="padR10 pull-left">
                                        @*<input type="radio" name="gender" value="male" checked="checked" class="pull-left" />
                                        <label class="pull-left">Male</label>*@
                                        Male:   @Html.RadioButtonFor(m => m.Gender, "Male", new { @checked = true })
                                    </span><span class="pull-left">
                                        @*<input type="radio" name="gender" value="female" class="pull-left" />
                                        <label class="pull-left">Female</label>*@
                                        Female: @Html.RadioButtonFor(m => m.Gender, "Female")
                                    </span>
                                </div>
                                <div class="form-group">
                                    @Html.ValidationMessageFor(model => model.Gender)
                                </div>
                                <div class="form-group">
                                    <label>* Date of birth:</label>
                                    <div class="row">
                                        <div class="col-sm-2 col-xs-4">
                                            <select class="form-control">
                                                <option>Day</option>
                                                @for (int i = 1; i <= 31; i++)
                                                {
                                                    <option>@i</option>    
                                                }
                                            </select>
                                        </div>
                                        <div class="col-sm-2 col-xs-4">
                                            <select class="form-control">
                                                <option value="">Month</option>
                                                <option value="1">January</option>
                                                <option value="2">February</option>
                                                <option value="3">March</option>
                                                <option value="4">April</option>
                                                <option value="5">May</option>
                                                <option value="6">June</option>
                                                <option value="7">July</option>
                                                <option value="8">August</option>
                                                <option value="9">September</option>
                                                <option value="10">October</option>
                                                <option value="11">November</option>
                                                <option value="12">December</option>
                                            </select>
                                        </div>
                                        <div class="col-sm-2 col-xs-4">
                                            <select class="form-control">
                                                <option>Year</option>
                                                @for (int i = 1916; i <= 1999; i++)
                                                {
                                                    <option>@i</option>    
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Dob_day)
                                </div>
                                <div class="form-group">
                                    <label class="block">* Legal region:</label>
                                    <div class="row">
                                        <div class="col-sm-4">
                                            @{
                                                List<SelectListItem> listregion = new List<SelectListItem>();
                                                listregion.Add(new SelectListItem
                                                {
                                                    Text = "England Wales",
                                                    Value = "England Wales"
                                                });
                                                listregion.Add(new SelectListItem
                                                {
                                                    Text = "Scotland",
                                                    Value = "Scotland"
                                                });
                                                listregion.Add(new SelectListItem
                                                {
                                                    Text = "Northern Ireland",
                                                    Value = "Northern Ireland"
                                                }); 
                                            }

                                            @Html.DropDownListFor(model => model.Region, listregion, "-- Please select --", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Region)



                                            @*<select class="form-control">
                                                    <option value="" selected="selected">--- Please select ---</option>
                                                    <option value="1">England Wales</option>
                                                    <option value="2">Scotland</option>
                                                    <option value="3">Northern Ireland</option>
                                                </select>*@
                                        </div>
                                    </div>
                                </div>
                                <h3 class="heading3">Address details...</h3>
                                <div class="form-group">
                                    <label class="block">* Country:</label>
                                    <div class="row">
                                        <div class="col-sm-4">

                                            @{
                                                List<SelectListItem> listCountry = new List<SelectListItem>();
                                                listCountry.Add(new SelectListItem
                                                {
                                                    Text = "UK (England &amp; Wales)",
                                                    Value = "UK (England &amp; Wales)"
                                                });
                                                listCountry.Add(new SelectListItem
                                                {
                                                    Text = "UK (Scotland)",
                                                    Value = "UK (Scotland)"
                                                });
                                                listCountry.Add(new SelectListItem
                                                {
                                                    Text = "NUK (Northern Ireland)",
                                                    Value = "UK (Northern Ireland)"
                                                });
                                                listCountry.Add(new SelectListItem
                                                {
                                                    Text = "Other European",
                                                    Value = "Other European"
                                                });
                                                listCountry.Add(new SelectListItem
                                                {
                                                    Text = "Other Global",
                                                    Value = "Other Global"
                                                }); 
                                            }

                                            @Html.DropDownListFor(model => model.Country, listCountry, "-- Please select --", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Country)

                                            @*<select class="form-control">
                                                    <option value="" selected="selected">--- Please select ---</option>
                                                    <option value="1">UK (England &amp; Wales)</option>
                                                    <option value="2">UK (Scotland)</option>
                                                    <option value="3">UK (Northern Ireland)</option>
                                                    <option value="4">Other European</option>
                                                    <option value="5">Other Global</option>
                                                </select>*@
                                        </div>
                                    </div>
                                </div>
                                <h3 class="heading3">Contact information...</h3>
                                <div class="form-group">
                                    <label>* Daytime contact number:</label>
                                    @Html.TextBoxFor(model => model.DaytimeContactNumber, new { id = "txtDaytimeContactNumber", @class = "form-control", @maxlength = "128", @size = "60", @value = "" })
                                    @Html.ValidationMessageFor(model => model.DaytimeContactNumber)
                                </div>
                                <div class="form-group">
                                    <label>Mobile telephone number:</label>
                                    @Html.TextBoxFor(model => model.MobileTelephoneNumber, new { id = "txtMobileTelephoneNumber", @class = "form-control", @maxlength = "128", @size = "60", @value = "" })
                                    @Html.ValidationMessageFor(model => model.MobileTelephoneNumber)
                                </div>
                                <div class="form-group">
                                    <label>* Email address:</label>
                                    @Html.TextBoxFor(model => model.EmailAddress, new { id = "txtEmailAddress", @class = "form-control", @maxlength = "128", @size = "60", @value = "" })
                                    @Html.ValidationMessageFor(model => model.EmailAddress)
                                </div>
                                <h3 class="heading3">Login details...</h3>
                                <div class="form-group">
                                    <label>* Type a username:</label>
                                    @Html.TextBoxFor(model => model.UserName, new { id = "txtUserName", @class = "form-control", @maxlength = "128", @size = "60", @value = "" })
                                    @Html.ValidationMessageFor(model => model.UserName)
                                </div>
                                <div class="form-group">
                                    <label>* Type a password</label>
                                    @Html.PasswordFor(model => model.Password, new { id = "txtPassword", @class = "form-control", @maxlength = "128", @size = "60", @value = "",@onblur = "return CheckPassword()" })
                                    @Html.ValidationMessageFor(model => model.Password)
                                    <label class="ChangePasswordError"  style="color:red"></label>
                                </div>
                                <div class="form-group">
                                    <label>* Retype your password:</label>
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { id = "txtConfirmPassword", @class = "form-control", @maxlength = "128", @size = "60", @value = "" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                                <h3 class="heading3">Terms of Use</h3>
                                <p>The Terms of Use relate to your use of the Law Guide, Document Preparation Service and Legal Document Review.</p>
                                <a href="javascript:void(0);">View Terms of use</a>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" id="ckAgree" />
                                        @Html.LabelFor(x => x.TermsAndConditions)
                                        @Html.ValidationMessageFor(x => x.TermsAndConditions)
                                    </label>
                                    <span class="field-validation-error" id="spnAgree" style="display: none">This field is required.</span>
                                </div>
                                <h3 class="heading3">Data and privacy policy</h3>
                                <p>Epoq Legal Ltd (trading as DesktopLawyer.co.uk) will hold and process your personal information on our systems for the purposes of administration, operation of the service and business development. If you have purchased a Document Preparation Service which includes Legal Document Review, we will also provide your personal information to the law firm conducting the review.</p>
                                <p>To see how we use your information please read the <a href="javascript:void(0);">Cookie data  & privacy</a> policy. We, and our partners will only use your information to contact you by mail, telephone or email, in connection with this service.</p>
                                <p>ELL (or other companies in the groups to which they belong) may wish to contact you in the future, to pass on information about product updates and other issues in which you may be interested. Do you wish to receive such information?</p>
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox" />
                                        I would like to receive email updates
                                    </label>
                                </div>
                                <p>* indicates required field</p>

                                <input id="btnLogin" type="button" value='Register' class="btn btn-green pull-right" />
                                <input id="btnSubmit" type="submit" value="login" style="display: none" class="btn btn-primary" />


                                @*<button type="submit" class="btn btn-primary pull-right" id="">Register</button>*@
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


<script type="text/javascript">

    function setFocusToUserNameTextBox() {
        if ($("#txtUserName").val() == "") {
            $("#txtUserName").focus();
        }
    }

    $(document).ready(function () {

        if ('@Model.Message' != null && '@Model.Message' != undefined && '@Model.Message' != "")
            alert('@Model.Message');

        $('#txtUserName').bind("cut copy paste", function (e) {
            e.preventDefault();
        });

        $('#txtPassword').bind("cut copy paste", function (e) {
            e.preventDefault();
        });

        @*var message = '@Model.Message';
        var messageType = '@Model.MessageType';

        if (message != '' && messageType != '') {

            showMessage("divMessage", messageType, message);
        }*@

        $("#btnLogin").click(function () {

            if (typeof localStorage["fav"] !== "undefined" && localStorage["fav"] !== "undefined") {
                $scope.fav = JSON.parse(localStorage["fav"]);
            }

            $("#frmRegister").valid();
            if ($("#ckAgree").is(':checked')) {
                $("#spnAgree").hide();

                if ($("#frmRegister").valid())
                    $("#btnSubmit").click();
            }
            else {
                $("#spnAgree").show();
            }
        });

    });

    $(document).keyup(function (e) {
        if (e.keyCode == 13) {
            $("#btnSubmit").click();
        }
    });
</script>
